name: Release & Tag

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '18'

jobs:
  # Create GitHub Release
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Changes in this Release
            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Installation
            ```bash
            git clone https://github.com/${{ github.repository }}.git
            cd deklaro-light
            git checkout ${{ steps.get_version.outputs.VERSION }}
            npm install
            ```

            See [DEPLOYMENT.md](./DEPLOYMENT.md) for deployment instructions.
          draft: false
          prerelease: false

  # Build and Push Docker Image
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/deklaro:latest
            ${{ secrets.DOCKER_USERNAME }}/deklaro:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to Production
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [release, docker]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          alias-domains: |
            deklaro.com
            www.deklaro.com

      - name: Verify deployment
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://deklaro.com/api/health || exit 1
          echo "Deployment successful!"

  # Notify success
  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Send success notification
        run: |
          echo "ðŸš€ Release ${{ github.ref }} deployed successfully!"
          echo "Production: https://deklaro.com"
